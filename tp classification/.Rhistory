ques2 <- read_excel("C:/Users/21650/Downloads/ques2.xlsx")
View(ques)
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
library(readxl)
ques <- read_excel("Titre de la fiche d'exercices (réponses)2.xlsx")
ques2 <- read_excel("C:/Users/21650/Downloads/ques2.xlsx")
View(ques)
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
library(readxl)
ques <- read_excel("Titre de la fiche d'exercices (réponses)2.xlsx")
ques2 <- read_excel("C:/Users/21650/Downloads/ques2.xlsx")
View(ques)
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
library(readxl)
ques <- read_excel("Titre de la fiche d'exercices (réponses)2.xlsx")
ques2 <- read_excel("C:/Users/21650/Downloads/ques2.xlsx")
View(ques)
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
library(readxl)
ques <- read_excel("Titre de la fiche d'exercices (réponses)2.xlsx")
ques2 <- read_excel("C:/Users/21650/Downloads/ques2.xlsx")
View(ques)
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
res.hcpc <- HCPC(X.comp,  graph = FALSE)
# Réaliser une ACP sur la matrice avec la variable de classe
res.pca <- PCA(X.comp, quali.sup = 12)
# Représentation des individus en fonction de leur classe
fviz_pca_ind(res.pca, habillage = X.comp$Classe , palette = "jco")
res.pca$quanti.sup <- NULL
res.pca$quali.sup <- X.comp$Classe
# Visualiser les contributions des variables sur les deux premiers axes de l'ACP, en fonction de la classe
fviz_contrib(res.pca, choice = "var", axes = c(1,2))
res.hcpc <- HCPC(X.comp,  graph = FALSE)
fviz_cluster(X.comp,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc <- HCPC(X,  graph = FALSE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
fviz_cluster(res.hcpc,
select = "kmeans",     # Specify clustering method
k = 2,                 # Specify number of clusters
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc <- HCPC(X,  graph = FALSE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
fviz_cluster(res.hcpc,
select = "WardD2,     # Specify clustering method
k = 2,                 # Specify number of clusters
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
res.hcpc <- HCPC(X,  graph = FALSE)
res.hcpc <- HCPC(X,  graph = FALSE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
fviz_cluster(res.hcpc,
select = "WardD2",     # Specify clustering method
k = 2,                 # Specify number of clusters
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
# Application de la méthode k-means avec le nombre de clusters optimal
k <- kmeans(X, centers = 2, nstart = 25)
# Application de la méthode k-means avec le nombre de clusters optimal
k <- kmeans(X, centers = 2, nstart = 25)
k
# Application de la méthode k-means avec le nombre de clusters optimal
k <- kmeans(X, centers = 2, nstart = 25)
k$Clustering vector
# Application de la méthode k-means avec le nombre de clusters optimal
k <- kmeans(X, centers = 2, nstart = 25)
k$Clustering
# Application de la méthode k-means avec le nombre de clusters optimal
k <- kmeans(X, centers = 2, nstart = 25)
k$
# Application de la méthode k-means avec le nombre de clusters optimal
k <- kmeans(X, centers = 2, nstart = 25)
k
#3. Rajouter la classe d'affectation de chaque individu en tant que variable
X.comp<-cbind.data.frame(X, as.factor(classes))
colnames(X.comp)[11]<-"Classe"
X.comp
#4. Description des classes
#   La fonction catdes permet de trier les variables quanti de la plus caractérisante à la moins caractérisante en positif
res.cat=catdes(X.comp, num.var=12)
res.cat
# #proba: the significance threshold considered to characterize the category (by default 0.05)
# Réaliser une ACP sur la matrice avec la variable de classe
res.pca <- PCA(X.comp, quali.sup = 12)
# Représentation des individus en fonction de leur classe
fviz_pca_ind(res.pca, habillage = X.comp$Classe , palette = "jco")
res.pca$quanti.sup <- NULL
res.pca$quali.sup <- X.comp$Classe
# Visualiser les contributions des variables sur les deux premiers axes de l'ACP, en fonction de la classe
fviz_contrib(res.pca, choice = "var", axes = c(1,2))
res.hcpc <- HCPC(X,  graph = FALSE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
fviz_cluster(res.hcpc,
select = "WardD2",     # Specify clustering method
k = k,                 # Specify number of clusters
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc <- HCPC(X,  graph = FALSE)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
length(unique(res.hcpc$data.clust))
fviz_cluster(res.hcpc,
select = "WardD2",     # Specify clustering method
k = k,                 # Specify number of clusters
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
length(unique(res.hcpc$data.clust))
fviz_cluster(res.hcpc,
select = "WardD2",     # Specify clustering method
k = 2,                 # Specify number of clusters
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
length(unique(res.hcpc$data.clust))
fviz_cluster(res.hcpc,
select = "WardD2",     # Specify clustering method
k = 2,                 # Specify number of clusters
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
length(unique(res.hcpc$data.clust))
res.hcpc <- HCPC(res.pca, graph = FALSE)
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8
)
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8
)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
length(unique(res.hcpc$data.clust))
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8
)
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8,
color_labels_by_k = TRUE     # Set colors based on clustering results
)
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8,
color_labels_by_k = TRUE     # Set colors based on clustering results
)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
length(unique(res.hcpc$data.clust))
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8,
color_labels_by_k = TRUE     # Set colors based on clustering results
)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
res.hcpc$data.clust
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
# Extract cluster membership information
cluster_labels <- res.hcpc$data.clustering
# Create a list of unique cluster labels
unique_clusters <- unique(cluster_labels)
# Print the list of unique cluster labels
print(unique_clusters)
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
# Extract cluster membership information
cluster_labels <- res.hcpc$data.clustering
# Create a list of unique cluster labels
unique_clusters <- unique(cluster_labels)
# Print the list of unique cluster labels
unique_clusters
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8,
color_labels_by_k = TRUE     # Set colors based on clustering results
)
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
labels_track_height = 0.8,
)
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
rect_border = "jco",
color_labels_by_k = TRUE     # Set colors based on clustering results
)
fviz_dend(res.hcpc,
cex = 0.7,
palette = "jco",
rect = TRUE, rect_fill = TRUE,
labels_track_height = 0.8,
color_labels_by_k = TRUE     # Set colors based on clustering results
)
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
fviz_ca_biplot (res.ca, repel = TRUE,
ggtheme = theme_minimal())
res.hcpc <- HCPC(X,  graph = FALSE , nb.clust = 2)
fviz_cluster(res.hcpc,
repel = TRUE,
show.clust.cent = TRUE,
palette = "jco",
ggtheme = theme_minimal(),
main = "Factor map"
)
# Extract cluster membership information
cluster_labels <- res.hcpc$data.clustering
# Create a list of unique cluster labels
unique_clusters <- unique(cluster_labels)
# Print the list of unique cluster labels
unique_clusters
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
fviz_screeplot(res.mca)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_ind (res.mca,select.ind  = list(cos2 = 0.4),
repel = TRUE,
ggtheme = theme_minimal ())
active<-ques[,50:54]
sapply(active, class)
res.mca <- MCA (active, graph = FALSE)
fviz_screeplot(res.mca)
res.mca$eig
fviz_mca_var (res.mca,
repel = TRUE,
ggtheme = theme_minimal ())
fviz_pca_ind (res.pca, col.ind = "cos2",
gradient.cols = c("#f6821f", "#dc4048", "#7acdf1"),
repel = TRUE)
fviz_pca_var(res.pca, col.var="cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) +
scale_color_gradient2(low="#00AFBB", mid="#E7B800",
high="#FC4E07", midpoint=0.6) +
theme_minimal()
fviz_pca_var(res.pca, col.var="cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) +
scale_color_gradient2(low="#00AFBB", mid="#E7B800",
high="#FC4E07", midpoint=0.6) +
theme_minimal()
X=cluster12[,6:]
library(readxl)
cluster12 <- read_excel("C:/Users/21650/Desktop/ODD/code.xlsx",sheet = "Data2021")
View(cluster12)
library(FactoMineR)
update.packages("FactoMineR")
X=cluster12[,6:]
X=cluster12[,6:90]
res.pca=PCA(X,ncp = 5,graph = F)
head(res.pca$eig)
res.pca$var$coord
res.pca$var$cos2
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 70), ncp=10)
install.packages("factoextra")
library(factoextra)
# Load the factoextra package
update.packages("factoextra")
library(factoextra)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 70), ncp=10)
fviz_pca_var(res.pca, col.var = "indianred",col.quanti.sup="darkblue" )
X=cluster12[,6:58]
res.pca=PCA(X,ncp = 5,graph = F)
head(res.pca$eig)
res.pca$var$coord
res.pca$var$cos2
res.pca$var$cos2
install.packages("factoextra")
install.packages("factoextra")
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 70), ncp=10)
# Load the factoextra package
update.packages("factoextra")
library(factoextra)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 70), ncp=10)
names(res.pca$var)
fviz_pca_var(res.pca, col.var = "indianred",col.quanti.sup="darkblue" )
fviz_pca_var(res.pca, col.var="cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) +
scale_color_gradient2(low="#00AFBB", mid="#E7B800",
high="#FC4E07", midpoint=0.6) +
theme_minimal()
fviz_contrib(res.pca, choice = "var", axes = 1, top = 30)
fviz_contrib(res.pca, choice = "var", axes = 2, top = 30)
fviz_pca_ind (res.pca, col.ind = "cos2",
gradient.cols = c("#f6821f", "#dc4048", "#7acdf1"),
repel = TRUE)
summary(X)
